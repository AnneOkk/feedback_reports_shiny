indu_ac = ifelse(cat_indu == "Other", F, T)) %>%
ggplot(aes(x = wave, y = accri, col = factor("Other"))) +
stat_summary(aes(y = accri), fun.y=mean, colour="blue", geom="line") +
stat_identity(aes(y = accri_per_indu))
long_pan %>%
mutate(highlight_flag = ifelse(id == 1, F, T),
indu_ac = ifelse(cat_indu == "Other", F, T)) %>%
ggplot(aes(x = wave, y = accri, col = factor("Other"))) +
stat_summary(aes(y = accri), fun.y=mean, colour="blue", geom="line") +
stat_identity(aes(y = accri_per_indu), geom = "line")
runApp()
runApp()
knitr::opts_chunk$set(include = T, echo = T, warning = F, message = F)
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("mediation", "foreign", "tidyverse","stargazer","multicon", "ggplot2", "plyr", "reshape2", "readxl",
"scales", "grid", "tidyLPA", "Rcpp", "naniar", "dplyr", "car", "mice",
"rstudioapi", "labelled", "modi", "semPlot", "kulife", "splitstackshape", "summarytools", "writexl")
ipak(packages)
knitr::opts_chunk$set(echo = TRUE, include = TRUE)
library(readxl)
getwd()
files <- dir(getwd(), pattern = "T\\d.xlsx$", full.names = FALSE)
files
df_list <- vector("list", length(files))
names(df_list) <- files
read_in <- function(df = files) {
for (fname in df) {
df_list[[fname]] <- read_excel(fname)
}
names(df_list) <- paste0("data_", gsub(".xlsx","",names(df_list)))
ff <- df_list
}
df_list <- read_in(files)
list2env(df_list,envir=.GlobalEnv)
data_T1 = transform(data_T1, newcol=paste(T1Code_1, T1Code_2, T1Code_3, T1Code_4, sep="_") %>%
as.character(.))
colnames(data_T1)[colnames(data_T1) == "Duration..in.seconds."] <- "t1duration"
data_T2 = transform(data_T2, newcol=paste(Q683_1, Q683_2, Q683_3, Q683_4, sep="_") %>%
as.character(.))
colnames(data_T2)[colnames(data_T2) == "Duration..in.seconds."] <- "t2duration"
data_T3 = transform(data_T3, newcol=paste(T3_Code_1, T3_Code_2, T3_Code_3, T3_Code_4, sep="_") %>%
as.character(.))
colnames(data_T3)[colnames(data_T3) == "Duration..in.seconds."] <- "t3duration"
data_T4 = transform(data_T4, newcol=paste(T4Code_1, T4Code_2, T4Code_3, T4Code_4, sep="_") %>%
as.character(.)) %>% dplyr::rename(
t4errsel = T4erreff,
t4errsel_9_TEXT = T4erreff_9_TEXT
)
names(data_T4) <- gsub("erreffort", "errpre", names(data_T4), fixed = TRUE)
colnames(data_T4)[colnames(data_T4) == "Duration..in.seconds."] <- "t4duration"
library(dplyr)
matched_ID <- read_excel("Matched_man.xlsx")
sorted_matchedID <- arrange(matched_ID, T1) %>%
dplyr::rename(Goal_ID = T1)
# T1
data_T1$newcol <- toupper(data_T1$newcol)
data_T1$newcol[ data_T1$newcol == "NA_NA_NA_NA" ] <- NA
data_T1 <- data_T1[!is.na(data_T1$newcol), ]
# T2
data_T2$newcol <- toupper(data_T2$newcol) %>% as.character(.)
T2_match <- arrange(data_T2,newcol)
k <- match(T2_match$newcol, unlist(sorted_matchedID[3]))
j <- !is.na(k)
T2_match$newcol[j] <- sorted_matchedID$Goal_ID[k[j]]
T2_match$newcol[ T2_match$newcol == "NA_NA_NA_NA" ] <- NA
T2_match <- T2_match[!is.na(T2_match$newcol), ]
# T3
data_T3$newcol <- toupper(data_T3$newcol)
T3_match <- arrange(data_T3,newcol)
i <- match(T3_match$newcol, unlist(sorted_matchedID[4]))
j <- !is.na(i)
T3_match$newcol[j] <- sorted_matchedID$Goal_ID[i[j]]
T3_match$newcol[ T3_match$newcol == "NA_NA_NA_NA" ] <- NA
T3_match <- T3_match[!is.na(T3_match$newcol), ]
# T4
data_T4$newcol <- toupper(data_T4$newcol)
T4_match <- arrange(data_T4,newcol)
i <- match(T4_match$newcol, unlist(sorted_matchedID[5]))
j <- !is.na(i)
T4_match$newcol[j] <- sorted_matchedID$Goal_ID[i[j]]
T4_match$newcol[ T4_match$newcol == "NA_NA_NA_NA" ] <- NA
T4_match <- T4_match[!is.na(T4_match$newcol), ]
# left join
left_joinT1T2 = left_join(data_T1, T2_match, by = "newcol") %>%
plyr::rename(c("T1email_1" = "EMAIL", "StartDate.x" = "Start_T1","EndDate.x" = "End_T1" ,
"StartDate.y" = "Start_T2", "EndDate.y" = "End_T2"))
left_joinT2T3 <- left_join(left_joinT1T2, T3_match, by = "newcol") %>%
plyr::rename(c( "StartDate" = "Start_T3","EndDate" = "End_T3"))
left_joinT3T4 <- left_join(left_joinT2T3, T4_match, by = "newcol") %>%
plyr::rename(c( "StartDate" = "Start_T4","EndDate" = "End_T4"))
outlist <- c("A.K.KLEINE@RUG.NL", "RAHUL.FPM1711@IIMKASHIPUR.AC.IN", "SAFAL.BATRA@IIMKASHIPUR.AC.IN")
left_joinT3T4 <- left_joinT3T4[ ! left_joinT3T4$newcol %in% outlist, ]
left_joinT3T4 <- left_joinT3T4 %>% dplyr::rename(Participant_ID = newcol)
fill_df <-
left_joinT3T4 %>%
group_by(Participant_ID) %>%
fill(c(2:154, 156:ncol(left_joinT3T4)), .direction = 'up') %>%
ungroup()
names(fill_df) <- tolower(names(fill_df))
fill_df <- fill_df %>% dplyr::rename(
t2error = q684,
t2error_text = q684_9_text)
names(fill_df) <- gsub(x = names(fill_df), pattern = "q685", replacement = "t2errser")
names(fill_df) <- gsub(x = names(fill_df), pattern = "q686", replacement = "t2errsel")
names(fill_df) <- gsub(x = names(fill_df), pattern = "q687", replacement = "t2errper")
names(fill_df) <- gsub(x = names(fill_df), pattern = "q688", replacement = "t2errpre")
names(fill_df) <- gsub(x = names(fill_df), pattern = "q689", replacement = "t2errund")
fill_df_sel <- fill_df %>%
dplyr::select(matches("Participant_ID|t.duration|start_t.|end_t.|t1octyp|t1octyp.|t1expt_7|t1senr|t1found|t1date_7|t1date_8|t1inno|t1owner|t1coown|t1coownn_4|t1perown_1|t1func|t1mbus|t1mbusn_1|t1indu|t1prod|t1opnec|t1count|t.error|t.errser_.|t.errsel|t.errsel|t.errper_.|t.errpre_.|t.errund_.|t.chal_.|t.threat_.|t.hindr_.|t.accri_.|t.exploi_.|t.explor_.|t.bis_.|t.bas._.|t.gopro_.|t.thriv_.|t1age_4|t1sex|t1lang|t1edu|t1child|t1chin|start_t2|end_t2|t2emp|t2empn_1|t2act1|t2act2|t2act3|t2sumcap|t2capit|start_t3|end_t3|start_t4|end_t4"))
rs <- rowSums(is.na(fill_df_sel))
nodupl_df <- fill_df_sel[order(rs), ]
nodupl_df <- nodupl_df[!duplicated(nodupl_df$participant_id), ]
nodupl_df<-nodupl_df[!(nodupl_df$t1octyp==4),]
library(tidyverse)
library(splitstackshape)
split_df <- nodupl_df %>%
cSplit("t1error", ",") %>%
cSplit("t2error", ",") %>%
cSplit("t3error", ",") %>%
cSplit("t4error", ",")
# T1
split_df_t1 <- split_df %>%
transmute(t1errorcount = rowSums(!is.na(.[,c("t1error_1", "t1error_2", "t1error_3", "t1error_4", "t1error_5", "t1error_6", "t1error_7", "t1error_8")])))
# T2
split_df_t2 <- split_df %>%
transmute(t2errorcount = rowSums(!is.na(.[,c("t2error_1", "t2error_2", "t2error_3", "t2error_4", "t2error_5")])))
# T3
split_df_t3 <- split_df %>%
transmute(t3errorcount = rowSums(!is.na(.[,c("t3error_1", "t3error_2", "t3error_3", "t3error_4", "t3error_5")])))
# T4
split_df_t4 <- split_df %>%
transmute(t4errorcount = rowSums(!is.na(.[,c("t4error_1", "t4error_2", "t4error_3", "t4error_4", "t4error_5", "t4error_6", "t4error_7")])))
split_df <- cbind(split_df, split_df_t1, split_df_t2, split_df_t3, split_df_t4)
library(tidyverse)
err_df <- split_df %>% dplyr::select(matches("t.error_")) %>% .[,-c(1:4)]
# T1 to T2
err_1_t1t2 <- as_tibble(ifelse(err_df == 1, 1, NA)) %>% transmute(err_1_sumt1t2 = rowSums(.[c("t1error_1", "t1error_2", "t1error_3", "t1error_4", "t1error_5", "t1error_6", "t1error_7", "t1error_8","t2error_1", "t2error_2", "t2error_3", "t2error_4", "t2error_5")], na.rm = T))
err_2_t1t2 <- as_tibble(ifelse(err_df == 2, 1, NA)) %>% transmute(err_2_sumt1t2 = rowSums(.[c("t1error_1", "t1error_2", "t1error_3", "t1error_4", "t1error_5", "t1error_6", "t1error_7", "t1error_8","t2error_1", "t2error_2", "t2error_3", "t2error_4", "t2error_5")], na.rm = T))
err_3_t1t2 <- as_tibble(ifelse(err_df == 3, 1, NA)) %>% transmute(err_3_sumt1t2 = rowSums(.[c("t1error_1", "t1error_2", "t1error_3", "t1error_4", "t1error_5", "t1error_6", "t1error_7", "t1error_8","t2error_1", "t2error_2", "t2error_3", "t2error_4", "t2error_5")], na.rm = T))
err_4_t1t2 <- as_tibble(ifelse(err_df == 4, 1, NA)) %>% transmute(err_4_sumt1t2 = rowSums(.[c("t1error_1", "t1error_2", "t1error_3", "t1error_4", "t1error_5", "t1error_6", "t1error_7", "t1error_8","t2error_1", "t2error_2", "t2error_3", "t2error_4", "t2error_5")], na.rm = T))
err_5_t1t2 <- as_tibble(ifelse(err_df == 5, 1, NA)) %>% transmute(err_5_sumt1t2 = rowSums(.[c("t1error_1", "t1error_2", "t1error_3", "t1error_4", "t1error_5", "t1error_6", "t1error_7", "t1error_8","t2error_1", "t2error_2", "t2error_3", "t2error_4", "t2error_5")], na.rm = T))
err_6_t1t2 <- as_tibble(ifelse(err_df == 6, 1, NA)) %>% transmute(err_6_sumt1t2 = rowSums(.[c("t1error_1", "t1error_2", "t1error_3", "t1error_4", "t1error_5", "t1error_6", "t1error_7", "t1error_8","t2error_1", "t2error_2", "t2error_3", "t2error_4", "t2error_5")], na.rm = T))
err_7_t1t2 <- as_tibble(ifelse(err_df == 7, 1, NA)) %>% transmute(err_7_sumt1t2 = rowSums(.[c("t1error_1", "t1error_2", "t1error_3", "t1error_4", "t1error_5", "t1error_6", "t1error_7", "t1error_8","t2error_1", "t2error_2", "t2error_3", "t2error_4", "t2error_5")], na.rm = T))
err_8_t1t2 <- as_tibble(ifelse(err_df == 8, 1, NA)) %>% transmute(err_8_sumt1t2 = rowSums(.[c("t1error_1", "t1error_2", "t1error_3", "t1error_4", "t1error_5", "t1error_6", "t1error_7", "t1error_8","t2error_1", "t2error_2", "t2error_3", "t2error_4", "t2error_5")], na.rm = T))
err_9_t1t2 <- as_tibble(ifelse(err_df == 9, 1, NA)) %>% transmute(err_9_sumt1t2 = rowSums(.[c("t1error_1", "t1error_2", "t1error_3", "t1error_4", "t1error_5", "t1error_6", "t1error_7", "t1error_8","t2error_1", "t2error_2", "t2error_3", "t2error_4", "t2error_5")], na.rm = T))
# T2 to T3
err_1_t2t3 <- as_tibble(ifelse(err_df == 1, 1, NA)) %>% transmute(err_1_sumt2t3 = rowSums(.[c("t2error_1", "t2error_2", "t2error_3", "t2error_4", "t2error_5",
"t3error_1", "t3error_2", "t3error_3", "t3error_4", "t3error_5")], na.rm = T))
err_2_t2t3 <- as_tibble(ifelse(err_df == 2, 1, NA)) %>% transmute(err_2_sumt2t3 = rowSums(.[c("t2error_1", "t2error_2", "t2error_3", "t2error_4", "t2error_5",
"t3error_1", "t3error_2", "t3error_3", "t3error_4", "t3error_5")], na.rm = T))
err_3_t2t3 <- as_tibble(ifelse(err_df == 3, 1, NA)) %>% transmute(err_3_sumt2t3 = rowSums(.[c("t2error_1", "t2error_2", "t2error_3", "t2error_4", "t2error_5",
"t3error_1", "t3error_2", "t3error_3", "t3error_4", "t3error_5")], na.rm = T))
err_4_t2t3 <- as_tibble(ifelse(err_df == 4, 1, NA)) %>% transmute(err_4_sumt2t3 = rowSums(.[c("t2error_1", "t2error_2", "t2error_3", "t2error_4", "t2error_5",
"t3error_1", "t3error_2", "t3error_3", "t3error_4", "t3error_5")], na.rm = T))
err_5_t2t3 <- as_tibble(ifelse(err_df == 5, 1, NA)) %>% transmute(err_5_sumt2t3 = rowSums(.[c("t2error_1", "t2error_2", "t2error_3", "t2error_4", "t2error_5",
"t3error_1", "t3error_2", "t3error_3", "t3error_4", "t3error_5")], na.rm = T))
err_6_t2t3 <- as_tibble(ifelse(err_df == 6, 1, NA)) %>% transmute(err_6_sumt2t3 = rowSums(.[c("t2error_1", "t2error_2", "t2error_3", "t2error_4", "t2error_5",
"t3error_1", "t3error_2", "t3error_3", "t3error_4", "t3error_5")], na.rm = T))
err_7_t2t3 <- as_tibble(ifelse(err_df == 7, 1, NA)) %>% transmute(err_7_sumt2t3 = rowSums(.[c("t2error_1", "t2error_2", "t2error_3", "t2error_4", "t2error_5",
"t3error_1", "t3error_2", "t3error_3", "t3error_4", "t3error_5")], na.rm = T))
err_8_t2t3 <- as_tibble(ifelse(err_df == 8, 1, NA)) %>% transmute(err_8_sumt2t3 = rowSums(.[c("t2error_1", "t2error_2", "t2error_3", "t2error_4", "t2error_5",
"t3error_1", "t3error_2", "t3error_3", "t3error_4", "t3error_5")], na.rm = T))
err_9_t2t3 <- as_tibble(ifelse(err_df == 9, 1, NA)) %>% transmute(err_9_sumt2t3 = rowSums(.[c("t2error_1", "t2error_2", "t2error_3", "t2error_4", "t2error_5",
"t3error_1", "t3error_2", "t3error_3", "t3error_4", "t3error_5")], na.rm = T))
# T3 to T4
err_1_t3t4 <- as_tibble(ifelse(err_df == 1, 1, NA)) %>% transmute(err_1_sumt3t4 = rowSums(.[c("t3error_1", "t3error_2", "t3error_3", "t3error_4", "t3error_5", "t4error_1", "t4error_2", "t4error_3", "t4error_4", "t4error_5","t4error_6","t4error_7")], na.rm = T))
err_2_t3t4 <- as_tibble(ifelse(err_df == 2, 1, NA)) %>% transmute(err_2_sumt3t4 = rowSums(.[c("t3error_1", "t3error_2", "t3error_3", "t3error_4", "t3error_5", "t4error_1", "t4error_2", "t4error_3", "t4error_4", "t4error_5","t4error_6","t4error_7")], na.rm = T))
err_3_t3t4 <- as_tibble(ifelse(err_df == 3, 1, NA)) %>% transmute(err_3_sumt3t4 = rowSums(.[c("t3error_1", "t3error_2", "t3error_3", "t3error_4", "t3error_5", "t4error_1", "t4error_2", "t4error_3", "t4error_4", "t4error_5","t4error_6","t4error_7")], na.rm = T))
err_4_t3t4 <- as_tibble(ifelse(err_df == 4, 1, NA)) %>% transmute(err_4_sumt3t4 = rowSums(.[c("t3error_1", "t3error_2", "t3error_3", "t3error_4", "t3error_5", "t4error_1", "t4error_2", "t4error_3", "t4error_4", "t4error_5","t4error_6","t4error_7")], na.rm = T))
err_5_t3t4 <- as_tibble(ifelse(err_df == 5, 1, NA)) %>% transmute(err_5_sumt3t4 = rowSums(.[c("t3error_1", "t3error_2", "t3error_3", "t3error_4", "t3error_5", "t4error_1", "t4error_2", "t4error_3", "t4error_4", "t4error_5","t4error_6","t4error_7")], na.rm = T))
err_6_t3t4 <- as_tibble(ifelse(err_df == 6, 1, NA)) %>% transmute(err_6_sumt3t4 = rowSums(.[c("t3error_1", "t3error_2", "t3error_3", "t3error_4", "t3error_5", "t4error_1", "t4error_2", "t4error_3", "t4error_4", "t4error_5","t4error_6","t4error_7")], na.rm = T))
err_7_t3t4 <- as_tibble(ifelse(err_df == 7, 1, NA)) %>% transmute(err_7_sumt3t4 = rowSums(.[c("t3error_1", "t3error_2", "t3error_3", "t3error_4", "t3error_5", "t4error_1", "t4error_2", "t4error_3", "t4error_4", "t4error_5","t4error_6","t4error_7")], na.rm = T))
err_8_t3t4 <- as_tibble(ifelse(err_df == 8, 1, NA)) %>% transmute(err_8_sumt3t4 = rowSums(.[c("t3error_1", "t3error_2", "t3error_3", "t3error_4", "t3error_5", "t4error_1", "t4error_2", "t4error_3", "t4error_4", "t4error_5","t4error_6","t4error_7")], na.rm = T))
err_9_t3t4 <- as_tibble(ifelse(err_df == 9, 1, NA)) %>% transmute(err_9_sumt3t4 = rowSums(.[c("t3error_1", "t3error_2", "t3error_3", "t3error_4", "t3error_5", "t4error_1", "t4error_2", "t4error_3", "t4error_4", "t4error_5","t4error_6","t4error_7")], na.rm = T))
df_err_change <- cbind(split_df,
err_1_t1t2,err_2_t1t2,err_3_t1t2,err_4_t1t2,err_5_t1t2,err_6_t1t2,err_7_t1t2,err_8_t1t2,err_9_t1t2,
err_1_t2t3,err_2_t2t3,err_3_t2t3,err_4_t2t3,err_5_t2t3,err_6_t2t3,err_7_t2t3,err_8_t2t3,err_9_t2t3,
err_1_t3t4,err_2_t3t4,err_3_t3t4,err_4_t3t4,err_5_t3t4,err_6_t3t4,err_7_t3t4,err_8_t3t4,err_9_t3t4)
## T1
df_err_ser <- df_err_change %>% select(., t1errser_1:t1errser_9) %>%
transmute(t1errser_mean = rowMeans(., na.rm = T)) %>% cbind(df_err_change, .)
df_err_ser <- df_err_ser %>% select(., t1errser_1:t1errser_9) %>%
transmute(t1errser_sum = rowSums(., na.rm = T)) %>% cbind(df_err_ser, .)
## T2
df_err_ser <- df_err_ser %>% select(., t2errser_1:t2errser_9) %>%
transmute(t2errser_mean = rowMeans(., na.rm = T)) %>% cbind(df_err_ser, .)
df_err_ser <- df_err_ser %>% select(., t2errser_1:t2errser_9) %>%
transmute(t2errser_sum = rowSums(., na.rm = T)) %>% cbind(df_err_ser, .)
## T3
df_err_ser <- df_err_ser %>% select(., t3errser_1:t3errser_9) %>%
transmute(t3errser_mean = rowMeans(., na.rm = T)) %>% cbind(df_err_ser, .)
df_err_ser <- df_err_ser %>% select(., t3errser_1:t3errser_9) %>%
transmute(t3errser_sum = rowSums(., na.rm = T)) %>% cbind(df_err_ser, .)
## T4
df_err_ser <- df_err_ser %>% select(., t4errser_1:t4errser_9) %>%
transmute(t4errser_mean = rowMeans(., na.rm = T)) %>% cbind(df_err_ser, .)
df_err_ser <- df_err_ser %>% select(., t4errser_1:t4errser_9) %>%
transmute(t4errser_sum = rowSums(., na.rm = T)) %>% cbind(df_err_ser, .)
# T1
df_err_per <- df_err_ser %>% select(., t1errper_1:t1errper_9) %>%
transmute(t1errper = rowSums(., na.rm = T)) %>% cbind(df_err_ser, .)
# T2
df_err_per <- df_err_ser %>% select(., t2errper_1:t2errper_9) %>%
transmute(t2errper = rowSums(., na.rm = T)) %>% cbind(df_err_per, .)
# T3
df_err_per <- df_err_ser %>% select(., t3errper_1:t3errper_9) %>%
transmute(t3errper = rowSums(., na.rm = T)) %>% cbind(df_err_per, .)
# T4
df_err_per <- df_err_ser %>% select(., t4errper_1:t4errper_9) %>%
transmute(t4errper = rowSums(., na.rm = T)) %>% cbind(df_err_per, .)
# T1
df_err_pre <- df_err_per %>% select(., t1errpre_1:t1errpre_9) %>%
transmute(t1errpre = rowSums(., na.rm = T)) %>% cbind(df_err_per, .)
# T2
df_err_pre <- df_err_pre %>% select(., t2errpre_1:t2errpre_9) %>%
transmute(t2errpre = rowSums(., na.rm = T)) %>% cbind(df_err_pre, .)
# T3
df_err_pre <- df_err_pre %>% select(., t3errpre_1:t3errpre_9) %>%
transmute(t3errpre = rowSums(., na.rm = T)) %>% cbind(df_err_pre, .)
# T4
df_err_pre <- df_err_pre %>% select(., t4errpre_1:t4errpre_9) %>%
transmute(t4errpre = rowSums(., na.rm = T)) %>% cbind(df_err_pre, .)
library(zoo)
library(lubridate)
df_err_pre$t1timebuiss <- as.yearmon(paste(df_err_pre$t1date_7, df_err_pre$t1date_8), "%Y %m")
df_err_pre$t1timebuiss <- as_date(df_err_pre$t1timebuiss)
df_err_pre$start_t1 <- as.Date(df_err_pre$start_t1)
df_err_pre$t1timebuiss <- difftime(df_err_pre$start_t1, df_err_pre$t1timebuiss, UTC,
units = c("days"))
# Make time since foundation > 50 years = NA
df_err_pre$t1timebuiss[ df_err_pre$t1timebuiss > 18250 ] <- NA
df_rename <- df_err_pre %>%
dplyr::rename(
t1octyp_past = t1octypp,
t1experience = t1expt_7,
t1coown_number = t1coownn_4,
t1perown = t1perown_1,
t1func_text = t1func_5_text,
t1mbus_number = t1mbusn_1,
t1indu_text = t1indu_7_text,
t1error_text = t1error_9_text,
t1errser_text = t1errser_9_text,
t1errsel_text = t1errsel_9_text,
t1errper_text = t1errper_9_text,
t1errpre_text = t1errpre_9_text,
t1lang_text = t1lang_3_text,
t1edu_text = t1edu_6_text,
t2emp_number = t2empn_1,
t2capit_text = t2capit_8_text,
t2errser_text = t2errser_9_text,
t2errsel_text = t2errsel_9_text,
t2errper_text = t2errper_9_text,
t2errpre_text = t3errpre_9_text,
t3errser_text = t3errser_9_text,
t3errsel_text = t3errsel_9_text,
t3errper_text = t3errper_9_text,
t3errpre_text = t3errpre_9_text,
t4errser_text = t4errser_9_text,
t4errsel_text = t4errsel_9_text,
t4errper_text = t4errper_9_text,
t4errpre_text = t4errpre_9_text
)
# t1octypp_6_text
df_rename$t1octyp_past[df_rename$t1octypp_6_text == "Student"] = 7
attr(df_rename$t1octyp_past,'additional_occupation') <- c('7 = Student')
# t1inno_3_text stays
# t1func_5_text stays
# t1indu_7_text stays
# t1lang_3_text
df_rename$t1lang[df_rename$t1lang_text == "Marathi"] = 4
df_rename$t1lang[df_rename$t1lang_text == "marathi"] = 4
df_rename$t1lang[df_rename$t1lang_text == "Telugu"] = 5
df_rename$t1lang[df_rename$t1lang_text == "telugu"] = 5
df_rename$t1lang[df_rename$t1lang_text == "TELUGU"] = 5
df_rename$t1lang[df_rename$t1lang_text == "Odia"] = 6
df_rename$t1lang[df_rename$t1lang_text == "odia"] = 6
attr(df_rename$t1lang,'languages') <- c('1 = Hindi', '2 = English', '3 = other', '4 = Marathi', '5 = Telugu', '6 = Odia')
# t1edu_text
df_rename$t1edu[df_rename$t1edu_text == "bachelor degree"] = 4
df_rename$t1edu[df_rename$t1edu_text == "Masters"] = 4
df_rename$t1edu[df_rename$t1edu_text == "Post graduate"] = 4
df_rename$t1edu[df_rename$t1edu_text == "Diploma in civil engineering."] = 4
df_rename$t1edu[df_rename$t1edu_text == "Masters in Business Administration"] = 4
df_rename$t1edu[df_rename$t1edu_text == "Masters Degree"] = 4
df_rename$t1edu[df_rename$t1edu_text == "Masters"] = 4
df_rename$t1edu[df_rename$t1edu_text == "Master degree"] = 4
df_rename$t1edu[df_rename$t1edu_text == "Diploma"] = 4
# t2capit_text stays
df_clean <- df_rename %>% select(-matches("start_t.|end_t.|t1date_.|t1inno_3_text|t1octypp_6_text|t1func_text|t1indu_text|t1edu_text|t1lang_text|t2capit_text|t.errser_\\d|t.errser_text|t.errsel_text|t.errper_.|t.errper_text|t.errpre_.|t.errpre_text|t.error_."))
# attention check items
df_rename_att <- df_clean %>%
dplyr::rename(
att_1_t2 = t2chal_2,
att_2_t2 = t2accri_4,
att_3_t2 = t2thriv_7,
att_1_t3 = t3chal_2,
att_2_t3 = t3accri_4,
att_3_t3 = t3thriv_7,
att_1_t4 = t4chal_2,
att_2_t4 = t4accri_4,
att_3_t4 = t4thriv_7)
df_att = df_rename_att %>%
dplyr::select(att_1_t2,att_2_t2,att_3_t2,att_1_t3, att_2_t3,
att_3_t3, att_1_t4, att_2_t4, att_3_t4)
## create attention fails df
att_1_t2 <- df_rename_att[df_rename_att$att_1_t2 %in% c(1, 2, 3,4,6,7), ]
att_2_t2 <- df_rename_att[df_rename_att$att_2_t2 %in% c(1, 3, 4, 5, 6,7), ]
att_3_t2 <- df_rename_att[df_rename_att$att_3_t2 %in% c(1, 2, 3, 4, 5,7), ]
att_1_t3 <- df_rename_att[df_rename_att$att_1_t3 %in% c(1, 2, 3,4,6,7), ]
att_2_t3 <- df_rename_att[df_rename_att$att_2_t3 %in% c(1, 3, 4, 5, 6,7), ]
att_3_t3 <- df_rename_att[df_rename_att$att_3_t3 %in% c(1, 2, 3, 4, 5,7), ]
att_1_t4 <- df_rename_att[df_rename_att$att_1_t4 %in% c(1, 2, 3,4,6,7), ]
att_2_t4 <- df_rename_att[df_rename_att$att_2_t4 %in% c(1, 3, 4, 5, 6,7), ]
att_3_t4 <- df_rename_att[df_rename_att$att_3_t4 %in% c(1, 2, 3, 4, 5,7), ]
attention_fail <- rbind(att_1_t2, att_2_t2, att_3_t2,
att_1_t3,att_2_t3,att_3_t3,
att_1_t4,att_2_t4,att_3_t4) %>%
as_tibble(.)
ID_vals <- data.frame(table(attention_fail$participant_id))
Rows_fails <- attention_fail$participant_id %in% ID_vals[ID_vals$Freq > 1,1]
Att_fails <- attention_fail[Rows_fails,]
## Number of fails
(data.frame(table(Att_fails$participant_id)))
## exclude attention fails (two or more fails)
df_att <- df_rename_att[!(df_rename_att$participant_id %in% Att_fails$participant_id),]
# create attention check variable
att_check = df_rename_att %>% dplyr::select(att_1_t2,att_2_t2,att_3_t2,
att_1_t3,att_2_t3,att_3_t3,
att_1_t4,att_2_t4,att_3_t4)
df_clean <- df_rename_att %>% select(-matches("att_._t."))
## rename items after attention check
df_clean <- df_clean %>% dplyr::rename(
t2chal_2 = t2chal_3,
t2chal_3 = t2chal_4,
t2accri_4 = t2accri_5,
t2accri_5 = t2accri_6,
t2accri_6 = t2accri_7,
t2thriv_7 = t2thriv_8,
t2thriv_8 = t2thriv_9,
t2thriv_9 = t2thriv_10,
t2thriv_10 = t2thriv_11,
t3chal_2 = t3chal_3,
t3chal_3 = t3chal_4,
t3accri_4 = t3accri_5,
t3accri_5 = t3accri_6,
t3accri_6 = t3accri_7,
t3thriv_7 = t3thriv_8,
t3thriv_8 = t3thriv_9,
t3thriv_9 = t3thriv_10,
t3thriv_10 = t3thriv_11,
t4chal_2 = t4chal_3,
t4chal_3 = t4chal_4,
t4accri_4 = t4accri_5,
t4accri_5 = t4accri_6,
t4accri_6 = t4accri_7,
t4thriv_7 = t4thriv_8,
t4thriv_8 = t4thriv_9,
t4thriv_9 = t4thriv_10,
t4thriv_10 = t4thriv_11,
)
df_recode <-
df_clean %>%
mutate_at(vars(c("t1accri_2", "t1bis_4", "t1bis_6", "t1thriv_4", "t1thriv_10",
"t2accri_2","t2thriv_4","t2thriv_10",
"t3accri_2","t3thriv_4","t3thriv_10",
"t4accri_2", "t1bis_4", "t4bis_6", "t4thriv_4", "t4thriv_10")),
~ (8 - .))
df_recode <-
df_recode %>%
mutate_at(vars(c("t1gopro_2", "t1gopro_4",
"t2gopro_2", "t2gopro_4",
"t3gopro_2", "t3gopro_4",
"t4gopro_2", "t4gopro_4")),
~ (6 - .))
df_recode <- df_recode %>%
mutate(t1octyp_past=dplyr::recode(t1octyp_past, `4` = 3, `5` = 4, `6` = 5))
## Age < 18 = NA
df_recode$t1age[df_recode$t1age < 18] = NA
str_c(names(df_clean), sep = "", collapse = "|")
demos <- df_recode %>% select(matches("participant_id|t1duration|t1age_4|t1sex|t1lang|t1edu|t1child|t1chin|t1octyp|t1octyp_past|t1experience|t1senr|t1found|t1func|t1opnec|t1owner|t1coown|t1coown_number|t1perown|t1mbus|t1mbus_number|t1timebuiss|t1inno|t1indu|t1prod|t1count|t2emp|t2emp_number|t2act1|t2act2|t2act3|t2sumcap|t2capit"))
demos_num <- df_recode %>% select(matches("t1age_4|t1sex|t1lang|t1edu|t1child|t1chin|t1octyp|t1octyp_past|t1experience|t1senr|t1found|t1func|t1opnec|t1owner|t1coown|t1coown_number|t1perown|t1mbus|t1mbus_number|t1timebuiss|t1inno|t1indu|t1count|t2emp|t2emp_number|t2act1|t2act2|t2act3|t2sumcap|t2capit"))
error_t1 <- df_recode %>% select(matches("t1errsel|t1errorcount|t1errser_mean|t1errser_sum|t1errper|t1errpre|t1errund_1"))
error_t2 <- df_recode %>% select(matches("t2errsel|t2errorcount|t2errser_mean|t2errser_sum|t2errper|t2errpre|t2errund_1"))
error_t3 <- df_recode %>% select(matches("t3errsel|t3errorcount|t3errser_mean|t3errser_sum|t3errper|t3errpre|t3errund_1"))
error_t4 <- df_recode %>% select(matches("t4errsel|t4errorcount|t4errser_mean|t4errser_sum|t4errper|t4errpre|t4errund_1"))
scale_items_t1 <- df_recode %>% select(matches("t1chal_1|t1chal_2|t1chal_3|t1threat_1|t1threat_2|t1threat_3|t1hindr_1|t1hindr_2|t1hindr_3|t1accri_1|t1accri_2|t1accri_3|t1accri_4|t1accri_5|t1accri_6|t1exploi_1|t1exploi_2|t1exploi_3|t1exploi_4|t1exploi_5|t1exploi_6|t1exploi_7|t1explor_1|t1explor_2|t1explor_3|t1explor_4|t1explor_5|t1explor_6|t1explor_7|t1bis_1|t1bis_2|t1bis_3|t1bis_4|t1bis_5|t1bis_6|t1bis_7|t1bas1_1|t1bas1_2|t1bas1_3|t1bas1_4|t1bas1_5|t1bas1_6|t1bas1_7|t1bas2_1|t1bas2_2|t1bas2_3|t1bas2_4|t1bas2_5|t1bas2_6|t1gopro_1|t1gopro_2|t1gopro_3|t1gopro_4|t1thriv_1|t1thriv_2|t1thriv_3|t1thriv_4|t1thriv_5|t1thriv_6|t1thriv_7|t1thriv_8|t1thriv_9|t1thriv_10"))
scale_items_t2 <- df_recode %>% select(matches("t2chal_1|t2chal_2|t2chal_3|t2threat_1|t2threat_2|t2threat_3|t2hindr_1|t2hindr_2|t2hindr_3|t2accri_1|t2accri_2|t2accri_3|t2accri_4|t2accri_5|t2accri_6|t2exploi_1|t2exploi_2|t2exploi_3|t2exploi_4|t2exploi_5|t2exploi_6|t2exploi_7|t2explor_1|t2explor_2|t2explor_3|t2explor_4|t2explor_5|t2explor_6|t2explor_7|t2gopro_1|t2gopro_2|t2gopro_3|t2gopro_4|t2thriv_1|t2thriv_2|t2thriv_3|t2thriv_4|t2thriv_5|t2thriv_6|t2thriv_7|t2thriv_8|t2thriv_9|t2thriv_10"))
scale_items_t3 <- df_recode %>% select(matches("3chal_1|t3chal_2|t3chal_3|t3threat_1|t3threat_2|t3threat_3|t3hindr_1|t3hindr_2|t3hindr_3|t3accri_1|t3accri_2|t3accri_3|t3accri_4|t3accri_5|t3accri_6|t3exploi_1|t3exploi_2|t3exploi_3|t3exploi_4|t3exploi_5|t3exploi_6|t3exploi_7|t3explor_1|t3explor_2|t3explor_3|t3explor_4|t3explor_5|t3explor_6|t3explor_7|3gopro_1|t3gopro_2|t3gopro_3|t3gopro_4|t3thriv_1|t3thriv_2|t3thriv_3|t3thriv_4|t3thriv_5|t3thriv_6|t3thriv_7|t3thriv_8|t3thriv_9|t3thriv_10"))
scale_items_t4 <- df_recode %>% select(matches("t4chal_1|t4chal_2|t4chal_3|t4threat_1|t4threat_2|t4threat_3|t4hindr_1|t4hindr_2|t4hindr_3|t4accri_1|t4accri_2|t4accri_3|t4accri_4|t4accri_5|t4accri_6|t4exploi_1|t4exploi_2|t4exploi_3|t4exploi_4|t4exploi_5|t4exploi_6|t4exploi_7|t4explor_1|t4explor_2|t4explor_3|t4explor_4|t4explor_5|t4explor_6|t4explor_7|t4bis_1|t4bis_2|t4bis_3|t4bis_4|t4bis_5|t4bis_6|t4bis_7|t4bas1_1|t4bas1_2|t4bas1_3|t4bas1_4|t4bas1_5|t4bas1_6|t4bas1_7|t4bas2_1|t4bas2_2|t4bas2_3|t4bas2_4|t4bas2_5|t4bas2_6|t4gopro_1|t4gopro_2|t4gopro_3|t4gopro_4|t4thriv_1|t4thriv_2|t4thriv_3|t4thriv_4|t4thriv_5|t4thriv_6|t4thriv_7|t4thriv_8|t4thriv_9|t4thriv_10"))
df_num <- cbind(scale_items_t1, scale_items_t2, scale_items_t3, scale_items_t4)
# add demos and error
## Dummy code for innovation column
demos$t1inno[df_num$t1inno != 4] = 1
demos$t1inno[df_num$t1inno == 4] = 0
demos$t1inno <- as.numeric(demos$t1inno)
## Make difftime numeric
demos$t1timebuiss <- as.numeric(demos$t1timebuiss)
## rename bas items
names(df_num) <- gsub("bas1", "bas", names(df_num))
names(df_num) <- gsub("bas2_1", "bas_8", names(df_num))
names(df_num) <- gsub("bas2_2", "bas_9", names(df_num))
names(df_num) <- gsub("bas2_3", "bas_10", names(df_num))
names(df_num) <- gsub("bas2_4", "bas_11", names(df_num))
names(df_num) <- gsub("bas2_5", "bas_12", names(df_num))
names(df_num) <- gsub("bas2_6", "bas_13", names(df_num))
comp_split <- df_num %>%
split.default(sub("_.*", "", names(df_num)))
comp <- map(comp_split, ~ multicon::composite(.x, nomiss = 0.8), data = .x)
comp_df <- do.call("cbind", comp) %>%
cbind(demos, error_t1, error_t2, error_t3, error_t4, .)
library(panelr)
library(stringi)
names(comp_df) <- sub("t", "t_", names(comp_df))
long_pan<-long_panel(comp_df, prefix = "t_", begin = 1,
end = 4, wave = "wave",
as_panel_data = TRUE, label_location = "beginning",
check.varying = TRUE)
names(long_pan)
long_pan_avs <- long_pan %>% group_by(id) %>%
dplyr::summarise(errund_av = mean(errund_1, na.rm = T),
errorcount_av = mean(errorcount, na.rm = T),
errser_av = mean(errser_mean, na.rm = T),
errsersum_av = mean(errser_sum, na.rm = T),
errper_av = mean(errper, na.rm = T),
errpre_av = mean(errpre, na.rm = T),
accri_av = mean(accri, na.rm = T),
bas_av = mean(bas, na.rm = T),
bis_av = mean(bis, na.rm = T),
chal_av = mean(chal, na.rm = T),
exploi_av = mean(exploi, na.rm = T),
explor_av = mean(explor, na.rm = T),
gopro_av = mean(gopro, na.rm = T),
hindr_av = mean(hindr, na.rm = T),
threat_av = mean(threat, na.rm = T),
thriv_av = mean(thriv, na.rm = T)
) %>% ungroup(.)
long_pan_avs$errund_av[is.nan(long_pan_avs$errund_av)] <- NA
long_pan_avs$errser_av[is.nan(long_pan_avs$errserav_av)] <- NA
long_pan_avs$accri_av[is.nan(long_pan_avs$accri_av)] <- NA
long_pan_avs$bas_av[is.nan(long_pan_avs$bas_av)] <- NA
long_pan_avs$bis_av[is.nan(long_pan_avs$bis_av)] <- NA
long_pan_avs$chal_av[is.nan(long_pan_avs$chal_av)] <- NA
long_pan_avs$exploi_av[is.nan(long_pan_avs$exploi_av)] <- NA
long_pan_avs$explor_av[is.nan(long_pan_avs$explor_av)] <- NA
long_pan_avs$explor_av[is.nan(long_pan_avs$explor_av)] <- NA
long_pan_avs$gopro_av[is.nan(long_pan_avs$gopro_av)] <- NA
long_pan_avs$hindr_av[is.nan(long_pan_avs$hindr_av)] <- NA
long_pan_avs$threat_av[is.nan(long_pan_avs$threat_av)] <- NA
long_pan_avs$thriv_av[is.nan(long_pan_avs$thriv_av)] <- NA
long_pan %>%
mutate(highlight_flag = ifelse(id == 1, T, F)) %>%
ggplot(aes(x = wave, y = accri, group = id)) +
geom_line(aes(linetype = highlight_flag, color = highlight_flag)) +
scale_linetype_manual(values=c("dotted", "solid"))+
scale_color_manual(values = c('#595959', 'red'))+
theme(legend.position = "none") +
labs(title = "Action Crisis over time",
x = "Time point in the survey",
y = "Action Crisis") +
stat_summary(aes(y = accri,group=1), fun.y=mean, colour="blue", geom="line",group=1)
names(long_pan)
long_pan <- long_pan %>% ungroup(.) %>%
mutate_at(.vars = vars(timebuiss),
.funs = funs(cat_time = case_when( . >= 1 & . <= 547.5 ~ "0 to 1.5 year",
. >= 547.6 & . <= 1277.5 ~ "1.5 to 3.5 years",
. >= 1277.6 & . <= 2190 ~ "3.5 to 6 years",
. >= 2190.5 ~ "over 6 years",
)))
long_pan$cat_time[is.na(long_pan$cat_time)] <- "No answer"
long_pan$cat_time <- factor(long_pan$cat_time)
long_pan <- long_pan %>%
mutate_at(.vars = vars(indu),
.funs = funs(cat_indu = case_when( . == 1 ~ "Information, Communications, or Technology",
. == 2 ~ "Finance, Real Estate, or Business Services",
. == 3 ~ "Health, Education, Government, or Social and Consumer Services",
. == 4 ~ "Wholesale, Retail",
. == 5 ~ "Manufacturing, Logistics",
. == 6 ~ "Agriculture, Extractive, or Construction",
. == 7 ~ "Other",
)))
long_pan$cat_indu[is.na(long_pan$cat_indu)] <- "No answer"
long_pan$cat_indu <- factor(long_pan$cat_indu)
long_pan <- long_pan %>%
mutate_at(.vars = vars(emp),
.funs = funs(cat_emp = case_when( . == 1 ~ "Has no employees",
. == 2 ~ "Has employees",
)))
long_pan$cat_emp[is.na(long_pan$cat_emp)] <- "No answer"
long_pan$cat_emp <- factor(long_pan$cat_emp)
long_pan <- left_join(long_pan, long_pan_avs)
names(long_pan)
shiny::runApp()
runApp()
names(long_pan)
runApp()
runApp()
library(rsconnect)
rsconnect::setAccountInfo(name='ak-kleine', token='BBDF2C6A7352B7F634DAE5EA28C5334D', secret='kTJCqhXts2gKPxlHL77IYcAwtF36vFDBrrpdJbOI')
write.csv(long_pan)
write.csv(long_pan,"/Users/anne/Dropbox/Honours_Course_Error_reflection_2019_20/Error_study/Study\ India/Feedback\ Reports/App/Data/long_pan.csv", row.names = FALSE)
long_pan<-read.csv("./Data/long_pan.csv")
long_pan<-read.csv("/Data/long_pan.csv")
long_pan<-read.csv("Data/long_pan.csv")
long_pan<-read.csv("/Users/anne/Dropbox/Honours_Course_Error_reflection_2019_20/Error_study/Study\ India/Feedback\ Reports/App/Data/long_pan.csv")
runApp('App')
runApp('App')
runApp('App')
