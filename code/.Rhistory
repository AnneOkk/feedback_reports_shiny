long_pan_ID <- full_join(long_pan_ID, start_end, by = c("Email" = "email", "P_ID" = "participant_id") )%>% .[!duplicated(.$Email), ]
long_pan_ID$id[is.na(long_pan_ID$id)] <- 123
# make empty character string for text
id<- long_pan_ID$id
text_var <- vector(mode="character", length=length(id))
for (i in seq_along(id)) {
text <- paste("Dear Study Participant,", cat("\n"), "Thank you very much for taking part in our study! You have made an important contribution to the investigation of entrepreneurial well-being and behavior." , cat("\n"), "You may access your feedback report via this link:", cat("\n"), "https://ak-kleine.shinyapps.io/App_Feedbackreports/", cat("\n"), "Your individual participation ID is:", id[i], cat("\n"), "If you enter this ID in the menu panel, you can compare your individual answers with the results for the rest of the sample.", cat("\n"), "One caveat: If you did not meet our inclusion criteria or if you did not provide any data, you may only see the average results.", cat("\n"), "In case you have questions about the study or the feedback report, or if you want to be informed once the study findings are being published, please contact Anne-Kathrin Kleine directly (via a.k.kleine@rug.nl).", cat("\n"), "We hope that taking part in the study was interesting for you as well and we wish you much success for your occupational future!", cat("\n"), "Kind regards," , cat("\n"), "Anne-Kathrin Kleine, in the name of the whole research team")
text_var[i] <- text
}
text_var
text_var <- data.frame(text_var)
long_pan_ID_text <- bind_cols(long_pan_ID, text_var) %>% as.string(.$text_var)
long_pan_ID_text <- bind_cols(long_pan_ID, text_var) %>% as.character(.$text_var)
str(long_pan_ID_text)
long_pan_ID_text
text_var
long_pan_ID_text <- bind_cols(long_pan_ID, text_var)
str(long_pan_ID_text)
str(long_pan_ID_text$text_var)
as.character(long_pan_ID_text$text_var)
long_pan_ID_text$text_var <- as.character(long_pan_ID_text$text_var)
long_pan_ID_text
long_pan_ID_text$text_var
str(long_pan_ID_text$text_var)
winner_text <- paste("Dear Study Participant,", cat("\n"), "Thank you very much for taking part in our study! You have made an important contribution to the investigation of entrepreneurial well-being and behavior." , cat("\n"), "As indicated in the study description, we have raffled off three prizes a 50$ and you are one of our winners! Congrats! " , cat("\n"), "We transfer the prize money via paypal. Please answer to this email indicating the email address we can send the money to.", cat("\n"), "You may access your feedback report via this link:", cat("\n"), "https://ak-kleine.shinyapps.io/App_Feedbackreports/", cat("\n"), "Your individual participation ID is:", ids[i], cat("\n"), "If you enter this ID in the menu panel, you can compare your individual answers with the results for the rest of the sample.", cat("\n"), "One caveat: If you did not meet our inclusion criteria or if you did not provide any data, you may only see the average results.", cat("\n"), "In case you have questions about the study or the feedback report, or if you want to be informed once the study findings are being published, please contact Anne-Kathrin Kleine directly (via a.k.kleine@rug.nl).", cat("\n"), "We hope that taking part in the study was interesting for you as well and we wish you much success for your occupational future!", cat("\n"), "Kind regards," , cat("\n"), "Anne-Kathrin Kleine, in the name of the whole research team")
# add raffle winner text
long_pan_ID_text_winner <- long_pan_ID_text %>% dplyr::select(matches("vanshrohini@gmail.com|priyagiri29@gmail.com|saurabh.jadhav@industill.com"))
long_pan_ID_text_winner
long_pan_ID_text_winner
# add raffle winner text
long_pan_ID_text_winner <- long_pan_ID_text %>% filter(., Email == "vanshrohini@gmail.com|priyagiri29@gmail.com|saurabh.jadhav@industill.com")
long_pan_ID_text_winner
long_pan_ID_text
# add raffle winner text
winners <- c("vanshrohini@gmail.com", "priyagiri29@gmail.com", "saurabh.jadhav@industill.com")
long_pan_ID_text_winner <- long_pan_ID_text %>% filter(., Email == winners)
# add raffle winner text
winners <- c("vanshrohini@gmail.com", "priyagiri29@gmail.com", "saurabh.jadhav@industill.com")
long_pan_ID_text_winner <- long_pan_ID_text %>% filter(., Email == winners)
long_pan_ID_text_winner <- long_pan_ID_text %>% dplyr::filter(., Email == winners)
long_pan_ID_text %>% dplyr::filter(., Email == winners)
long_pan_ID_text_winner <- filter(long_pan_ID_text, winners %in% Email)
long_pan_ID_text_winner <- filter(long_pan_ID_text, Email %in% winners)
long_pan_ID_text_winner
long_pan_ID_winner <- filter(long_pan_ID_text, Email %in% winners)
id<- long_pan_ID_winner$id
text_var <- vector(mode="character", length=length(id))
long_pan_ID_text
# delete winner rows
long_pan_ID_text <- long_pan_ID_text[ , !(filter(long_pan_ID_text, Email %in% winners))]
# delete winner rows
long_pan_ID_texti <- long_pan_ID_text[ , !( Email %in% winners)]
# delete winner rows
long_pan_ID_texti <- long_pan_ID_text[ , !( long_pan_ID_text$Email %in% winners)]
# delete winner rows
long_pan_ID_text <- long_pan_ID_text[!grepl("vanshrohini@gmail.com|priyagiri29@gmail.com|saurabh.jadhav@industill.com", long_pan_ID_text$Email),]
long_pan_ID_text$Email
library(panelr)
library(stringi)
comp_df_id <- read_csv("comp_df_id.csv") %>% select(matches("participant_id|email|exploi"))
names(comp_df_id)[1] <- "P_ID"
names(comp_df_id)[2] <- "Email"
# outlist for invalid emails
outlist <- c("a.k.kleine@rug.nl", "rahul.fpm1711@iimkashipur.ac.in", "safal.batra@iimkashipur.ac.in")
comp_df_id <- comp_df_id[ ! comp_df_id$Email %in% outlist, ]
# make long data frame
names(comp_df_id) <- sub("t", "t_", names(comp_df_id))
long_pan_ID<-long_panel(comp_df_id, prefix = "t_", begin = 1,
end = 4, wave = "wave",
as_panel_data = TRUE, label_location = "beginning",
check.varying = TRUE) %>% dplyr::select(matches("id|wave|P_ID|Email")) %>% dplyr::group_by(id, P_ID, Email) %>% dplyr::summarise(n = n())
# assign ids
long_pan_ID$id <- (as.numeric(long_pan_ID$id) + 1000)
# read in additional emails (excluded from analyses, but included in feedback report)
start_end <- read_csv("start_end.csv") %>% dplyr::select(-matches("start|end")) %>% .[!duplicated(.$email), ]
long_pan_ID <- full_join(long_pan_ID, start_end, by = c("Email" = "email", "P_ID" = "participant_id") )%>% .[!duplicated(.$Email), ]
long_pan_ID$id[is.na(long_pan_ID$id)] <- 123
# make empty character string for text
id<- long_pan_ID$id
text_var <- vector(mode="character", length=length(id))
for (i in seq_along(id)) {
text <- paste("Dear Study Participant,", cat("\n"), "Thank you very much for taking part in our study! You have made an important contribution to the investigation of entrepreneurial well-being and behavior." , cat("\n"), "You may access your feedback report via this link:", cat("\n"), "https://ak-kleine.shinyapps.io/App_Feedbackreports/", cat("\n"), "Your individual participation ID is:", id[i], cat("\n"), "If you enter this ID in the menu panel, you can compare your individual answers with the results for the rest of the sample.", cat("\n"), "One caveat: If you did not meet our inclusion criteria or if you did not provide any data, you may only see the average results.", cat("\n"), "In case you have questions about the study or the feedback report, or if you want to be informed once the study findings are being published, please contact Anne-Kathrin Kleine directly (via a.k.kleine@rug.nl).", cat("\n"), "We hope that taking part in the study was interesting for you as well and we wish you much success for your occupational future!", cat("\n"), "Kind regards," , cat("\n"), "Anne-Kathrin Kleine, in the name of the whole research team")
text_var[i] <- text
}
text_var <- data.frame(text_var)
long_pan_ID_text <- bind_cols(long_pan_ID, text_var)
long_pan_ID_text$text_var <- as.character(long_pan_ID_text$text_var)
# add raffle winner text
winners <- c("vanshrohini@gmail.com", "priyagiri29@gmail.com", "saurabh.jadhav@industill.com")
long_pan_ID_winner <- filter(long_pan_ID_text, Email %in% winners)
id<- long_pan_ID_winner$id
text_var <- vector(mode="character", length=length(id))
for (i in seq_along(id)) {
winner_text <- paste("Dear Study Participant,", cat("\n"), "Thank you very much for taking part in our study! You have made an important contribution to the investigation of entrepreneurial well-being and behavior." , cat("\n"), "As indicated in the study description, we have raffled off three prizes a 50$ - and you are one of our winners! Congrats! " , cat("\n"), "We would like to transfer the prize money via paypal. Please answer to this email indicating the email address we can send the money to.", cat("\n"), "You may access your feedback report via this link:", cat("\n"), "https://ak-kleine.shinyapps.io/App_Feedbackreports/", cat("\n"), "Your individual participation ID is:", id[i], cat("\n"), "If you enter this ID in the menu panel, you can compare your individual answers with the results for the rest of the sample.", cat("\n"), "One caveat: If you did not meet our inclusion criteria or if you did not provide any data, you may only see the average results.", cat("\n"), "In case you have questions about the study or the feedback report, or if you want to be informed once the study findings are being published, please contact Anne-Kathrin Kleine directly (via a.k.kleine@rug.nl).", cat("\n"), "We hope that taking part in the study was interesting for you as well and we wish you much success for your occupational future!", cat("\n"), "Kind regards," , cat("\n"), "Anne-Kathrin Kleine, in the name of the whole research team")
text_var[i] <- winner_text
}
text_winner_var <- data.frame(text_var)
long_pan_ID_winner_text <- bind_cols(long_pan_ID_winner, text_var)
long_pan_ID_winner_text <- bind_cols(long_pan_ID_winner, text_winner_var)
long_pan_ID_winner_text$text_winner_var <- as.character(long_pan_ID_winner_text$text_winner_var)
text_winner_var <- data.frame(text_var)
long_pan_ID_winner_text <- bind_cols(long_pan_ID_winner, text_winner_var)
long_pan_ID_winner_text$text_winner_var <- as.character(long_pan_ID_winner_text$text_winner_var)
long_pan_ID_winner_text
long_pan_ID_winner_text$text_var <- as.character(long_pan_ID_winner_text$text_var)
# delete winner rows
long_pan_ID_text <- long_pan_ID_text[!grepl("vanshrohini@gmail.com|priyagiri29@gmail.com|saurabh.jadhav@industill.com", long_pan_ID_text$Email),]
long_pan_ID_text <- bind_rows(long_pan_ID_text, long_pan_ID_winner_text)
long_pan_ID_text
comp_df_id <- read_csv("comp_df_id.csv")
# outlist for invalid emails
outlist <- c("a.k.kleine@rug.nl", "rahul.fpm1711@iimkashipur.ac.in", "safal.batra@iimkashipur.ac.in")
comp_df <- comp_df_id[ ! comp_df_id$Email %in% outlist, ]
comp_df
comp_df_id <- read_csv("comp_df_id.csv")
comp_df_id
# outlist for invalid emails
outlist <- c("a.k.kleine@rug.nl", "rahul.fpm1711@iimkashipur.ac.in", "safal.batra@iimkashipur.ac.in")
comp_df <- comp_df_id[ ! comp_df_id$Email %in% outlist, ]
comp_df
comp_df_id <- read_csv("comp_df_id.csv")
comp_df_id
comp_df_id <- read_csv("comp_df_id.csv") %>% select(matches("participant_id|email|exploi"))
comp_df_id
comp_df_id <- read_csv("comp_df_id.csv")
names(comp_df_id)
comp_df_id <- read_csv("comp_df_id.csv")
names(comp_df_id)[38] <- "P_ID"
names(comp_df_id)[39] <- "Email"
# outlist for invalid emails
outlist <- c("a.k.kleine@rug.nl", "rahul.fpm1711@iimkashipur.ac.in", "safal.batra@iimkashipur.ac.in")
comp_df <- comp_df_id[ ! comp_df_id$Email %in% outlist, ]
names(comp_df) <- sub("t", "t_", names(comp_df))
long_pan<-long_panel(comp_df, prefix = "t_", begin = 1,
end = 4, wave = "wave",
as_panel_data = TRUE, label_location = "beginning",
check.varying = TRUE)
comp_df_id <- read_csv("comp_df_id.csv") %>% select(matches("participant_id|email|exploi"))
comp_df_id <- read_csv("comp_df_id.csv")
names(comp_df_id)[38] <- "P_ID"
names(comp_df_id)[39] <- "Email"
# outlist for invalid emails
outlist <- c("a.k.kleine@rug.nl", "rahul.fpm1711@iimkashipur.ac.in", "safal.batra@iimkashipur.ac.in")
comp_df_id <- comp_df_id[ ! comp_df_id$Email %in% outlist, ]
comp_df_id
comp_df_id <- read_csv("comp_df_id.csv") %>% select(matches("participant_id|email|exploi|octyp|perown"))
comp_df_id
names(comp_df_id)[3] <- "P_ID"
names(comp_df_id)[4] <- "Email"
# outlist for invalid emails
outlist <- c("a.k.kleine@rug.nl", "rahul.fpm1711@iimkashipur.ac.in", "safal.batra@iimkashipur.ac.in")
comp_df_id <- comp_df_id[ ! comp_df_id$Email %in% outlist, ]
comp_df_id
# make long data frame
names(comp_df_id) <- sub("t", "t_", names(comp_df_id))
long_pan_ID<-long_panel(comp_df_id, prefix = "t_", begin = 1,
end = 4, wave = "wave",
as_panel_data = TRUE, label_location = "beginning",
check.varying = TRUE) %>% dplyr::select(matches("id|wave|P_ID|Email")) %>% dplyr::group_by(id, P_ID, Email) %>% dplyr::summarise(n = n())
# make long data frame
names(comp_df_id) <- sub("t", "t_", names(comp_df_id))
long_pan_ID<-long_panel(comp_df_id, prefix = "t_", begin = 1,
end = 4, wave = "wave",
as_panel_data = TRUE, label_location = "beginning",
check.varying = TRUE) %>% dplyr::select(matches("id|wave|P_ID|Email|exploi|octyp|perown")) %>% dplyr::group_by(id, P_ID, Email) %>% dplyr::summarise(n = n())
# assign ids
long_pan_ID$id <- (as.numeric(long_pan_ID$id) + 1000)
# make long data frame
names(comp_df_id) <- sub("t", "t_", names(comp_df_id))
long_pan_ID<-long_panel(comp_df_id, prefix = "t_", begin = 1,
end = 4, wave = "wave",
as_panel_data = TRUE, label_location = "beginning",
check.varying = TRUE) %>% dplyr::select(matches("id|wave|P_ID|Email|exploi|octyp|perown")) %>% dplyr::group_by(id, P_ID, Email) %>% dplyr::summarise(n = n())
# make long data frame
names(comp_df_id) <- sub("t", "t_", names(comp_df_id))
long_pan_ID<-long_panel(comp_df_id, prefix = "t_", begin = 1,
end = 4, wave = "wave",
as_panel_data = TRUE, label_location = "beginning",
check.varying = TRUE) %>% dplyr::select(matches("id|wave|P_ID|Email|exploi")) %>% dplyr::group_by(id, P_ID, Email) %>% dplyr::summarise(n = n())
comp_df_id <- read_csv("comp_df_id.csv") %>% select(matches("participant_id|email|exploi|octyp|perown"))
names(comp_df_id)[3] <- "P_ID"
names(comp_df_id)[4] <- "Email"
comp_df_id <- comp_df_id[ ! comp_df_id$Email %in% outlist, ]
# make long data frame
names(comp_df_id) <- sub("t", "t_", names(comp_df_id))
long_pan_ID<-long_panel(comp_df_id, prefix = "t_", begin = 1,
end = 4, wave = "wave",
as_panel_data = TRUE, label_location = "beginning",
check.varying = TRUE) %>% dplyr::select(matches("id|wave|P_ID|Email|exploi")) %>% dplyr::group_by(id, P_ID, Email) %>% dplyr::summarise(n = n())
comp_df_id <- read_csv("comp_df_id.csv") %>% select(matches("participant_id|email|exploi|octyp|perown"))
names(comp_df_id)[3] <- "P_ID"
names(comp_df_id)[4] <- "Email"
# outlist for invalid emails
outlist <- c("a.k.kleine@rug.nl", "rahul.fpm1711@iimkashipur.ac.in", "safal.batra@iimkashipur.ac.in")
comp_df_id <- comp_df_id[ ! comp_df_id$Email %in% outlist, ]
# make long data frame
names(comp_df_id) <- sub("t", "t_", names(comp_df_id))
long_pan_ID<-long_panel(comp_df_id, prefix = "t_", begin = 1,
end = 4, wave = "wave",
as_panel_data = TRUE, label_location = "beginning",
check.varying = TRUE) %>% dplyr::select(matches("id|wave|P_ID|Email|exploi|octyp|perown")) %>% dplyr::group_by(id, P_ID, Email) %>% dplyr::summarise(n = n())
# assign ids
long_pan_ID$id <- (as.numeric(long_pan_ID$id) + 1000)
long_pan_ID
knitr::opts_chunk$set(include = T, echo = T, warning = F, message = F)
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("mediation", "foreign", "tidyverse","stargazer","multicon", "ggplot2", "plyr", "reshape2", "readxl",
"scales", "grid", "tidyLPA", "Rcpp", "naniar", "dplyr", "car", "mice",
"rstudioapi", "labelled", "modi", "semPlot", "kulife", "splitstackshape", "summarytools", "writexl")
ipak(packages)
library(panelr)
library(stringi)
comp_df <- read_csv("comp_df.csv")
names(comp_df) <- sub("t", "t_", names(comp_df))
long_pan<-long_panel(comp_df, prefix = "t_", begin = 1,
end = 4, wave = "wave",
as_panel_data = TRUE, label_location = "beginning",
check.varying = TRUE)
long_pan_avs <- long_pan %>% group_by(id) %>%
dplyr::summarise(errund_av = mean(errund_1, na.rm = T),
errorcount_av = mean(errorcount, na.rm = T),
errser_av = mean(errser_mean, na.rm = T),
errsersum_av = mean(errser_sum, na.rm = T),
errper_av = mean(errper, na.rm = T),
errpre_av = mean(errpre, na.rm = T),
accri_av = mean(accri, na.rm = T),
bas_av = mean(bas, na.rm = T),
bis_av = mean(bis, na.rm = T),
chal_av = mean(chal, na.rm = T),
exploi_av = mean(exploi, na.rm = T),
explor_av = mean(explor, na.rm = T),
gopropro_av = mean(gopropro, na.rm = T),
goproadv_av = mean(goproadv, na.rm = T),
hindr_av = mean(hindr, na.rm = T),
threat_av = mean(threat, na.rm = T),
thriv_av = mean(thriv, na.rm = T)
) %>% ungroup(.)
long_pan_avs$errund_av[is.nan(long_pan_avs$errund_av)] <- NA
long_pan_avs$errser_av[is.nan(long_pan_avs$errser_av)] <- NA
long_pan_avs$errsersum_av[is.nan(long_pan_avs$errsersum_av)] <- NA
long_pan_avs$accri_av[is.nan(long_pan_avs$accri_av)] <- NA
long_pan_avs$bas_av[is.nan(long_pan_avs$bas_av)] <- NA
long_pan_avs$bis_av[is.nan(long_pan_avs$bis_av)] <- NA
long_pan_avs$chal_av[is.nan(long_pan_avs$chal_av)] <- NA
long_pan_avs$exploi_av[is.nan(long_pan_avs$exploi_av)] <- NA
long_pan_avs$explor_av[is.nan(long_pan_avs$explor_av)] <- NA
long_pan_avs$explor_av[is.nan(long_pan_avs$explor_av)] <- NA
long_pan_avs$gopropro_av[is.nan(long_pan_avs$gopropro_av)] <- NA
long_pan_avs$goproadv_av[is.nan(long_pan_avs$goproadv_av)] <- NA
long_pan_avs$hindr_av[is.nan(long_pan_avs$hindr_av)] <- NA
long_pan_avs$threat_av[is.nan(long_pan_avs$threat_av)] <- NA
long_pan_avs$thriv_av[is.nan(long_pan_avs$thriv_av)] <- NA
long_pan <- long_pan %>% ungroup(.) %>%
mutate_at(.vars = vars(timebuiss),
.funs = funs(cat_time = case_when( . >= 1 & . <= 547.5 ~ "0 to 1.5 year",
. >= 547.6 & . <= 1277.5 ~ "1.5 to 3.5 years",
. >= 1277.6 & . <= 2190 ~ "3.5 to 6 years",
. >= 2190.5 ~ "over 6 years",
)))
long_pan$cat_time[is.na(long_pan$cat_time)] <- "No answer"
long_pan$cat_time <- factor(long_pan$cat_time)
long_pan <- long_pan %>%
mutate_at(.vars = vars(indu),
.funs = funs(cat_indu = case_when( . == 1 ~ "Information, Communications, or Technology",
. == 2 ~ "Finance, Real Estate, or Business Services",
. == 3 ~ "Health, Education, Government, or Social and Consumer Services",
. == 4 ~ "Wholesale, Retail",
. == 5 ~ "Manufacturing, Logistics",
. == 6 ~ "Agriculture, Extractive, or Construction",
. == 7 ~ "Other",
)))
long_pan$cat_indu[is.na(long_pan$cat_indu)] <- "No answer"
long_pan$cat_indu <- factor(long_pan$cat_indu)
long_pan <- long_pan %>%
mutate_at(.vars = vars(emp),
.funs = funs(cat_emp = case_when( . == 1 ~ "Has no employees",
. == 2 ~ "Has employees",
)))
long_pan$cat_emp[is.na(long_pan$cat_emp)] <- "No answer"
long_pan$cat_emp <- factor(long_pan$cat_emp)
long_pan <- left_join(long_pan, long_pan_avs)
long_pan$id <- (as.numeric(long_pan$id) + 1000)
write.csv(long_pan,"/Users/anne/Dropbox/Honours_Course_Error_reflection_2019_20/Error_study/Study\ India/Feedback\ Reports/App/Data/long_pan.csv", row.names = FALSE)
library(panelr)
library(stringi)
comp_df_id <- read_csv("comp_df_id.csv") %>% select(matches("participant_id|email|exploi"))
names(comp_df_id)[1] <- "P_ID"
names(comp_df_id)[2] <- "Email"
# outlist for invalid emails
outlist <- c("a.k.kleine@rug.nl", "rahul.fpm1711@iimkashipur.ac.in", "safal.batra@iimkashipur.ac.in")
comp_df_id <- comp_df_id[ ! comp_df_id$Email %in% outlist, ]
# make long data frame
names(comp_df_id) <- sub("t", "t_", names(comp_df_id))
long_pan_ID<-long_panel(comp_df_id, prefix = "t_", begin = 1,
end = 4, wave = "wave",
as_panel_data = TRUE, label_location = "beginning",
check.varying = TRUE) %>% dplyr::select(matches("id|wave|P_ID|Email")) %>% dplyr::group_by(id, P_ID, Email) %>% dplyr::summarise(n = n())
# assign ids
long_pan_ID$id <- (as.numeric(long_pan_ID$id) + 1000)
# read in additional emails (excluded from analyses, but included in feedback report)
start_end <- read_csv("start_end.csv") %>% dplyr::select(-matches("start|end")) %>% .[!duplicated(.$email), ]
long_pan_ID <- full_join(long_pan_ID, start_end, by = c("Email" = "email", "P_ID" = "participant_id") )%>% .[!duplicated(.$Email), ]
long_pan_ID$id[is.na(long_pan_ID$id)] <- 123
# make empty character string for text
id<- long_pan_ID$id
text_var <- vector(mode="character", length=length(id))
for (i in seq_along(id)) {
text <- paste("Dear Study Participant,", cat("\n"), "Thank you very much for taking part in our study! You have made an important contribution to the investigation of entrepreneurial well-being and behavior." , cat("\n"), "You may access your feedback report via this link:", cat("\n"), "https://ak-kleine.shinyapps.io/App_Feedbackreports/", cat("\n"), "Your individual participation ID is:", id[i], cat("\n"), "If you enter this ID in the menu panel, you can compare your individual answers with the results for the rest of the sample.", cat("\n"), "One caveat: If you did not meet our inclusion criteria or if you did not provide any data, you may only see the average results.", cat("\n"), "In case you have questions about the study or the feedback report, or if you want to be informed once the study findings are being published, please contact Anne-Kathrin Kleine directly (via a.k.kleine@rug.nl).", cat("\n"), "We hope that taking part in the study was interesting for you as well and we wish you much success for your occupational future!", cat("\n"), "Kind regards," , cat("\n"), "Anne-Kathrin Kleine, in the name of the whole research team")
text_var[i] <- text
}
text_var <- data.frame(text_var)
long_pan_ID_text <- bind_cols(long_pan_ID, text_var)
long_pan_ID_text$text_var <- as.character(long_pan_ID_text$text_var)
# add raffle winner text
winners <- c("vanshrohini@gmail.com", "priyagiri29@gmail.com", "saurabh.jadhav@industill.com")
long_pan_ID_winner <- filter(long_pan_ID_text, Email %in% winners)
id<- long_pan_ID_winner$id
text_var <- vector(mode="character", length=length(id))
for (i in seq_along(id)) {
winner_text <- paste("Dear Study Participant,", cat("\n"), "Thank you very much for taking part in our study! You have made an important contribution to the investigation of entrepreneurial well-being and behavior." , cat("\n"), "As indicated in the study description, we have raffled off three prizes a 50$ - and you are one of our winners! Congrats! " , cat("\n"), "We would like to transfer the prize money via paypal. Please answer to this email indicating the email address we can send the money to.", cat("\n"), "You may access your feedback report via this link:", cat("\n"), "https://ak-kleine.shinyapps.io/App_Feedbackreports/", cat("\n"), "Your individual participation ID is:", id[i], cat("\n"), "If you enter this ID in the menu panel, you can compare your individual answers with the results for the rest of the sample.", cat("\n"), "One caveat: If you did not meet our inclusion criteria or if you did not provide any data, you may only see the average results.", cat("\n"), "In case you have questions about the study or the feedback report, or if you want to be informed once the study findings are being published, please contact Anne-Kathrin Kleine directly (via a.k.kleine@rug.nl).", cat("\n"), "We hope that taking part in the study was interesting for you as well and we wish you much success for your occupational future!", cat("\n"), "Kind regards," , cat("\n"), "Anne-Kathrin Kleine, in the name of the whole research team")
text_var[i] <- winner_text
}
text_winner_var <- data.frame(text_var)
long_pan_ID_winner_text <- bind_cols(long_pan_ID_winner, text_winner_var)
long_pan_ID_winner_text$text_var <- as.character(long_pan_ID_winner_text$text_var)
# delete winner rows
long_pan_ID_text <- long_pan_ID_text[!grepl("vanshrohini@gmail.com|priyagiri29@gmail.com|saurabh.jadhav@industill.com", long_pan_ID_text$Email),]
long_pan_ID_text <- bind_rows(long_pan_ID_text, long_pan_ID_winner_text)
write.csv2(long_pan_ID_text, "long_pan_ID_text.csv")
start_end <- read_csv("start_end.csv")
start_end <- start_end[!duplicated(start_end$email), ]
start_end$count <- rowSums( !is.na( start_end[,c(1,2,5:10)]))
start_end$count <- ifelse(start_end$count == 8, 2,
ifelse(start_end$count == 6, 1,
NA))
start_end <- start_end[!is.na(start_end$count),]
start_end <- bind_rows(start_end,
start_end %>%
filter_at(vars(starts_with("count")), any_vars(. == 2)))
## 76 people filled in at least 3 questionnaires = 3 prices!
# random draww:
sample (start_end$email, size = 3, replace =F)
write.csv(long_pan_ID_text,"long_pan_id_text.csv", row.names = FALSE)
thriv_avi <- long_pan %>% group_by(id) %>% dplyr::summarise(thriv_av = mean(thriv_av)) %>% ungroup(.)
thriv_avi
round(thriv_avi$thriv_av[1001], 1)
round(thriv_avi[thriv_av == 1001], 1)
round(thriv_avi$thriv_av[thriv_avi$thriv_av == 1001]
round(thriv_avi$thriv_av[thriv_avi$thriv_av == 1001], 1)
thriv_avi$thriv_av[thriv_avi$thriv_av == 1001]
thriv_avi$thriv_av[thriv_avi$id == 1001]
round(thriv_avi$thriv_av[thriv_avi$id == 1001], 1)
paste("Your mean Thriving is: \n<B>", round(thriv_avi$thriv_av[thriv_avi$id == input$Participant], 1), "<br/><br/>",
"</B>The mean Thriving for the whole sample is: <B>",
round(mean(long_pan$thriv_av, na.rm =T),1),
sep="")
round(accri_avi$accri_av[accri_avi$accri_id == 1001], 1)
accri_avi <- long_pan %>% group_by(id) %>% dplyr::summarise(accri_av = mean(accri_av)) %>% ungroup(.)
accri_per <- long_pan %>% group_by(cat_indu) %>% dplyr::summarise(accri_per_indu = mean(accri, na.rm = T)) %>% ungroup(.)
round(accri_avi$accri_av[accri_avi$accri_id == 1001], 1)
accri_avi
round(accri_avi$accri_av[accri_avi$id == 1001], 1)
knitr::opts_chunk$set(include = T, echo = T, warning = F, message = F)
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("mediation", "foreign", "tidyverse","stargazer","multicon", "ggplot2", "plyr", "reshape2", "readxl",
"scales", "grid", "tidyLPA", "Rcpp", "naniar", "dplyr", "car", "mice",
"rstudioapi", "labelled", "modi", "semPlot", "kulife", "splitstackshape", "summarytools", "writexl")
ipak(packages)
library(panelr)
library(stringi)
comp_df <- read_csv("comp_df.csv")
names(comp_df) <- sub("t", "t_", names(comp_df))
long_pan<-long_panel(comp_df, prefix = "t_", begin = 1,
end = 4, wave = "wave",
as_panel_data = TRUE, label_location = "beginning",
check.varying = TRUE)
long_pan_avs <- long_pan %>% group_by(id) %>%
dplyr::summarise(errund_av = mean(errund_1, na.rm = T),
errorcount_av = mean(errorcount, na.rm = T),
errser_av = mean(errser_mean, na.rm = T),
errsersum_av = mean(errser_sum, na.rm = T),
errper_av = mean(errper, na.rm = T),
errpre_av = mean(errpre, na.rm = T),
accri_av = mean(accri, na.rm = T),
bas_av = mean(bas, na.rm = T),
bis_av = mean(bis, na.rm = T),
chal_av = mean(chal, na.rm = T),
exploi_av = mean(exploi, na.rm = T),
explor_av = mean(explor, na.rm = T),
gopropro_av = mean(gopropro, na.rm = T),
goproadv_av = mean(goproadv, na.rm = T),
hindr_av = mean(hindr, na.rm = T),
threat_av = mean(threat, na.rm = T),
thriv_av = mean(thriv, na.rm = T)
) %>% ungroup(.)
long_pan_avs$errund_av[is.nan(long_pan_avs$errund_av)] <- NA
long_pan_avs$errser_av[is.nan(long_pan_avs$errser_av)] <- NA
long_pan_avs$errsersum_av[is.nan(long_pan_avs$errsersum_av)] <- NA
long_pan_avs$accri_av[is.nan(long_pan_avs$accri_av)] <- NA
long_pan_avs$bas_av[is.nan(long_pan_avs$bas_av)] <- NA
long_pan_avs$bis_av[is.nan(long_pan_avs$bis_av)] <- NA
long_pan_avs$chal_av[is.nan(long_pan_avs$chal_av)] <- NA
long_pan_avs$exploi_av[is.nan(long_pan_avs$exploi_av)] <- NA
long_pan_avs$explor_av[is.nan(long_pan_avs$explor_av)] <- NA
long_pan_avs$explor_av[is.nan(long_pan_avs$explor_av)] <- NA
long_pan_avs$gopropro_av[is.nan(long_pan_avs$gopropro_av)] <- NA
long_pan_avs$goproadv_av[is.nan(long_pan_avs$goproadv_av)] <- NA
long_pan_avs$hindr_av[is.nan(long_pan_avs$hindr_av)] <- NA
long_pan_avs$threat_av[is.nan(long_pan_avs$threat_av)] <- NA
long_pan_avs$thriv_av[is.nan(long_pan_avs$thriv_av)] <- NA
long_pan <- long_pan %>% ungroup(.) %>%
mutate_at(.vars = vars(timebuiss),
.funs = funs(cat_time = case_when( . >= 1 & . <= 547.5 ~ "0 to 1.5 year",
. >= 547.6 & . <= 1277.5 ~ "1.5 to 3.5 years",
. >= 1277.6 & . <= 2190 ~ "3.5 to 6 years",
. >= 2190.5 ~ "over 6 years",
)))
long_pan$cat_time[is.na(long_pan$cat_time)] <- "No answer"
long_pan$cat_time <- factor(long_pan$cat_time)
long_pan <- long_pan %>%
mutate_at(.vars = vars(indu),
.funs = funs(cat_indu = case_when( . == 1 ~ "Information, Communications, or Technology",
. == 2 ~ "Finance, Real Estate, or Business Services",
. == 3 ~ "Health, Education, Government, or Social and Consumer Services",
. == 4 ~ "Wholesale, Retail",
. == 5 ~ "Manufacturing, Logistics",
. == 6 ~ "Agriculture, Extractive, or Construction",
. == 7 ~ "Other",
)))
long_pan$cat_indu[is.na(long_pan$cat_indu)] <- "No answer"
long_pan$cat_indu <- factor(long_pan$cat_indu)
long_pan <- long_pan %>%
mutate_at(.vars = vars(emp),
.funs = funs(cat_emp = case_when( . == 1 ~ "Has no employees",
. == 2 ~ "Has employees",
)))
long_pan$cat_emp[is.na(long_pan$cat_emp)] <- "No answer"
long_pan$cat_emp <- factor(long_pan$cat_emp)
long_pan <- left_join(long_pan, long_pan_avs)
long_pan$id <- (as.numeric(long_pan$id) + 1000)
write.csv(long_pan,"/Users/anne/Dropbox/Honours_Course_Error_reflection_2019_20/Error_study/Study\ India/Feedback\ Reports/App/Data/long_pan.csv", row.names = FALSE)
library(panelr)
library(stringi)
comp_df_id <- read_csv("comp_df_id.csv") %>% select(matches("participant_id|email|exploi"))
names(comp_df_id)[1] <- "P_ID"
names(comp_df_id)[2] <- "Email"
# outlist for invalid emails
outlist <- c("a.k.kleine@rug.nl", "rahul.fpm1711@iimkashipur.ac.in", "safal.batra@iimkashipur.ac.in")
comp_df_id <- comp_df_id[ ! comp_df_id$Email %in% outlist, ]
# make long data frame
names(comp_df_id) <- sub("t", "t_", names(comp_df_id))
long_pan_ID<-long_panel(comp_df_id, prefix = "t_", begin = 1,
end = 4, wave = "wave",
as_panel_data = TRUE, label_location = "beginning",
check.varying = TRUE) %>% dplyr::select(matches("id|wave|P_ID|Email")) %>% dplyr::group_by(id, P_ID, Email) %>% dplyr::summarise(n = n())
# assign ids
long_pan_ID$id <- (as.numeric(long_pan_ID$id) + 1000)
# read in additional emails (excluded from analyses, but included in feedback report)
start_end <- read_csv("start_end.csv") %>% dplyr::select(-matches("start|end")) %>% .[!duplicated(.$email), ]
long_pan_ID <- full_join(long_pan_ID, start_end, by = c("Email" = "email", "P_ID" = "participant_id") )%>% .[!duplicated(.$Email), ]
long_pan_ID$id[is.na(long_pan_ID$id)] <- 123
# make empty character string for text
id<- long_pan_ID$id
text_var <- vector(mode="character", length=length(id))
for (i in seq_along(id)) {
text <- paste("Dear Study Participant,", cat("\n"), "Thank you very much for taking part in our study! You have made an important contribution to the investigation of entrepreneurial well-being and behavior." , cat("\n"), "You may access your feedback report via this link:", cat("\n"), "https://ak-kleine.shinyapps.io/App_Feedbackreports/", cat("\n"), "Your individual participation ID is:", id[i], cat("\n"), "If you enter this ID in the menu panel, you can compare your individual answers with the results for the rest of the sample.", cat("\n"), "One caveat: If you did not meet our inclusion criteria or if you did not provide any data, you may only see the average results.", cat("\n"), "In case you have questions about the study or the feedback report, or if you want to be informed once the study findings are being published, please contact Anne-Kathrin Kleine directly (via a.k.kleine@rug.nl).", cat("\n"), "We hope that taking part in the study was interesting for you as well and we wish you much success for your occupational future!", cat("\n"), "Kind regards," , cat("\n"), "Anne-Kathrin Kleine, in the name of the whole research team")
text_var[i] <- text
}
text_var <- data.frame(text_var)
long_pan_ID_text <- bind_cols(long_pan_ID, text_var)
long_pan_ID_text$text_var <- as.character(long_pan_ID_text$text_var)
# add raffle winner text
winners <- c("vanshrohini@gmail.com", "priyagiri29@gmail.com", "saurabh.jadhav@industill.com")
long_pan_ID_winner <- filter(long_pan_ID_text, Email %in% winners)
id<- long_pan_ID_winner$id
text_var <- vector(mode="character", length=length(id))
for (i in seq_along(id)) {
winner_text <- paste("Dear Study Participant,", cat("\n"), "Thank you very much for taking part in our study! You have made an important contribution to the investigation of entrepreneurial well-being and behavior." , cat("\n"), "As indicated in the study description, we have raffled off three prizes a 50$ - and you are one of our winners! Congrats! " , cat("\n"), "We would like to transfer the prize money via paypal. Please answer to this email indicating the email address we can send the money to.", cat("\n"), "You may access your feedback report via this link:", cat("\n"), "https://ak-kleine.shinyapps.io/App_Feedbackreports/", cat("\n"), "Your individual participation ID is:", id[i], cat("\n"), "If you enter this ID in the menu panel, you can compare your individual answers with the results for the rest of the sample.", cat("\n"), "One caveat: If you did not meet our inclusion criteria or if you did not provide any data, you may only see the average results.", cat("\n"), "In case you have questions about the study or the feedback report, or if you want to be informed once the study findings are being published, please contact Anne-Kathrin Kleine directly (via a.k.kleine@rug.nl).", cat("\n"), "We hope that taking part in the study was interesting for you as well and we wish you much success for your occupational future!", cat("\n"), "Kind regards," , cat("\n"), "Anne-Kathrin Kleine, in the name of the whole research team")
text_var[i] <- winner_text
}
text_winner_var <- data.frame(text_var)
long_pan_ID_winner_text <- bind_cols(long_pan_ID_winner, text_winner_var)
long_pan_ID_winner_text$text_var <- as.character(long_pan_ID_winner_text$text_var)
# delete winner rows
long_pan_ID_text <- long_pan_ID_text[!grepl("vanshrohini@gmail.com|priyagiri29@gmail.com|saurabh.jadhav@industill.com", long_pan_ID_text$Email),]
long_pan_ID_text <- bind_rows(long_pan_ID_text, long_pan_ID_winner_text)
write.csv2(long_pan_ID_text, "long_pan_ID_text.csv")
start_end <- read_csv("start_end.csv")
start_end <- start_end[!duplicated(start_end$email), ]
start_end$count <- rowSums( !is.na( start_end[,c(1,2,5:10)]))
start_end$count <- ifelse(start_end$count == 8, 2,
ifelse(start_end$count == 6, 1,
NA))
start_end <- start_end[!is.na(start_end$count),]
start_end <- bind_rows(start_end,
start_end %>%
filter_at(vars(starts_with("count")), any_vars(. == 2)))
## 76 people filled in at least 3 questionnaires = 3 prices!
# random draww:
sample (start_end$email, size = 3, replace =F)
write.csv(long_pan_ID_text,"long_pan_id_text.csv", row.names = FALSE)
write.table(long_pan_ID_text,file="long_pan_ID_text.csv",sep=";",dec = ".")
